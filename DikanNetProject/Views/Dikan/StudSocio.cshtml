@model DataEntities.SpSocio

@{
    ViewBag.Title = "מלגת סוציו";
    Layout = "~/Views/Dikan/_Layout.cshtml";
}

<div class="w-75 mx-auto">
    <h4>מלגת @Html.DisplayFor(model => model.ScholarshipDefinition.ScholarshipName)</h4>
    <hr />
    @Html.Partial("StudentDetails", Model.Student)
<div class="row">
    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.Apartment)
        </p>
        <a name="@Model.PathApartmentLease" style="display:@(Model.PathApartmentLease != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.Newcomer)
            @Html.DisplayNameFor(model => model.DateImmigration)
            <span>@Html.DisplayFor(model => model.DateImmigration)</span>
        </p>
        <a name="@Model.PathNewcomer" style="display:@(Model.PathNewcomer != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.SingleParent)
        </p>
        <a name="@Model.PathSingleParent" style="display:@(Model.PathSingleParent != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.BereavedFam)
        </p>
        <a name="@Model.PathBereavedFam" style="display:@(Model.PathBereavedFam != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.ReceiveScholarship)
        </p>
        @Html.DisplayFor(model => model.ReceiveScholarship)
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.MilitaryService)
            <span> @Html.DisplayFor(model => model.MilitaryService) </span>
        </p>
        <a name="@Model.PathMilitaryService" style="display:@(Model.PathMilitaryService != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

    <div class="col-md-4 col-sm-6 col-12 mt-2">
        <p class="font-weight-bold m-0">
            @Html.DisplayNameFor(model => model.ReserveMilitaryService)
            <span> @Html.DisplayFor(model => model.ReserveMilitaryService) </span>
        </p>
        <a name="@Model.PathReserveMilitaryService" style="display:@(Model.PathReserveMilitaryService != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
    </div>

</div>
        
<dl class="dl-horizontal">

    <dt>
        @Html.DisplayNameFor(model => model.HasFunding)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.HasFunding)
    </dd>


    @foreach (var fund in Model.Student.Fundings.ToList())
    {
        <dt> @Html.DisplayNameFor(Model => fund.FinancingInstitution) - @Html.DisplayNameFor(Model => fund.FinancingHeight) - @Html.DisplayNameFor(Model => fund.YearFinancing) </dt>

        <dd>@fund.FinancingInstitution - @fund.FinancingHeight - @fund.YearFinancing @fund.PathFunding כפתור קובץ</dd>
    }

    <dt>
        @Html.DisplayNameFor(model => model.CarOwner)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.CarOwner)
    </dd>

    @foreach (var car in Model.Student.CarStudents.ToList())
    {
        <dt> @Html.DisplayNameFor(Model => car.CarNumber) - @Html.DisplayNameFor(Model => car.CarCompany) - @Html.DisplayNameFor(Model => car.CarModel) </dt>

        <dd>@car.CarNumber - @car.CarCompany - @car.CarModel @car.PathCarLicense כפתור קובץ</dd>
    }

    <dt>
        @Html.DisplayNameFor(model => model.DisabilityType)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.DisabilityType)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.PathDisabilityType)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.PathDisabilityType)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.WorkSt)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.WorkSt)
    </dd>

    <dt>הכנסות סטודנט</dt>

    @foreach (var fin in Model.Student.StudentFinances.ToList())
    {
        <dt> @Html.DisplayNameFor(Model => fin.Month) - @Html.DisplayNameFor(Model => fin.Year) - @Html.DisplayNameFor(Model => fin.Salary)- @Html.DisplayNameFor(Model => fin.Expense) </dt>

        <dd>@fin.Month - @fin.Year - @fin.Salary @fin.Expense @fin.PathSalary @fin.PathExpense כפתור קובץ</dd>
    }

    <dt>בני משפחה עם הכנסות</dt>

    @foreach (var fam in Model.Student.FamilyMembers.Where(s => s.WorkSt != null).ToList())
    {
        <dt> @Html.DisplayNameFor(Model => fam.FamilyMemberId) - @Html.DisplayNameFor(Model => fam.Name) - @Html.DisplayNameFor(Model => fam.Realationship)- @Html.DisplayNameFor(Model => fam.WorkSt) </dt>

        <dd>@fam.FamilyMemberId - @fam.Name - @fam.Realationship @fam.WorkSt @fam.PathFmId כפתור קובץ</dd>
        if (fam.FamilyStudentFinances != null)
        {
            foreach (var fin in fam.FamilyStudentFinances.Where(s => s.SpId == Model.ScholarshipId).ToList())
            {
                <dt> @Html.DisplayNameFor(Model => fin.Month) - @Html.DisplayNameFor(Model => fin.Year) - @Html.DisplayNameFor(Model => fin.Salary)- @Html.DisplayNameFor(Model => fin.Expense) </dt>

                <dd>@fin.Month - @fin.Year - @fin.Salary @fin.Expense @fin.PathSalary @fin.PathExpense כפתור קובץ</dd>
            }
        }
    }

    <dt>בני משפחה</dt>

    @foreach (var fam in Model.Student.FamilyMembers.Where(s => s.WorkSt == null).ToList())
    {
        <dt> @Html.DisplayNameFor(Model => fam.FamilyMemberId) - @Html.DisplayNameFor(Model => fam.Name) - @Html.DisplayNameFor(Model => fam.Realationship)- @Html.DisplayNameFor(Model => fam.Gender) </dt>

        <dd>@fam.FamilyMemberId - @fam.Name - @fam.Realationship @fam.Gender @fam.PathFmId כפתור קובץ</dd>
    }

    <dt>
        @Html.DisplayNameFor(model => model.Comments)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Comments)
    </dd>

</dl>
    <div>
        @Html.DropDownListFor(model => model.Statuss,
            new SelectList(Enum.GetValues(typeof(Common.Enums.Status))), "", new
            { @class = "form-control chosen", @data_placeholder = "בחר סטטוס", @id = "new-status" })
        <br /><br />
        <button class="btn btn-success" id="update-status">עדכן סטטוס</button>
        @Html.ActionLink("חזרה לטבלה", "SubmitedSp", new { spId = Model.ScholarshipId, spType = Model.ScholarshipDefinition.Type }, new { @class = "btn btn-danger" })
    </div>
</div>

@section scripts{
    <script>
        $('#update-status').click(function () {
            $.ajax({
                url: "/Dikan/UpdateSpStatus",
                dataType: 'text',
                data: {ScholarId: @Model.ScholarshipId, StudId: @Model.StudentId, status: $('#new-status').val() },
	            method: "POST",
                success: function () {
                    // show success message
                    alert('סטטוס עודכן בהצלחה');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.status);
                    console.log(thrownError);
                }
            });
        });

        $('.btn-file').click(function () {
            $('#fileModal').modal('show');
            var pathfile = $(this).attr('name');
            var url = '@Url.Action("GetFile","File")' + '?pFilePath=' + pathfile;
            var type = pathfile.split('.').pop();
            //console.log(type);
            if (type == "pdf")
                type = "application/pdf";
            else
                type = "image/" + type;
            $('.embed-file').attr('type', type);
            $('.embed-file').attr('src', url);

        });
    </script>
}
