@model DataEntities.SpDefinition

@{
    ViewBag.Title = "הוספת מלגה חדשה";
    Layout = "~/Views/Dikan/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal px-3 py-3">
        <h4>@ViewBag.Header</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row ">
            <div class="form-group col-md-3 col-sm-4 col-12 mx-2">
                @Html.LabelFor(model => model.ScholarshipName, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.ScholarshipName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ScholarshipName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3 col-sm-4 col-12 mx-2">
                @Html.LabelFor(model => model.ScholarshipAmount, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.ScholarshipAmount, new { htmlAttributes = new { @class = "form-control only-numbers" } })
                    @Html.ValidationMessageFor(model => model.ScholarshipAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-3 col-sm-4 col-12 mx-2">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.DropDownListFor(model => model.Type,
                                  new SelectList(Enum.GetValues(typeof(Common.Enums.SpType))), "", new { @class = "form-control chosen", @data_placeholder = "סוג מלגה" })                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>
        </div>
        
        <div class="form-group mx-2 col-12">
            @Html.LabelFor(model => model.ScholarshipDetails, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.TextAreaFor(model => model.ScholarshipDetails,6,100, new { @class = "p-2"} )
                @Html.ValidationMessageFor(model => model.ScholarshipDetails, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-5 col-sm-5 col-12 mx-1">
                @Html.LabelFor(model => model.DateOpenScholarship, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.DateOpenScholarship, new { htmlAttributes = new { @class = "form-control datepicker only-numbers", @data_toggle = "datepicker" } })
                    @Html.ValidationMessageFor(model => model.DateOpenScholarship, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5 col-sm-5 col-12 mx-1">
                @Html.LabelFor(model => model.DateDeadLine, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.DateDeadLine, new { htmlAttributes = new { @class = "form-control only-numbers" } })
                    @Html.ValidationMessageFor(model => model.DateDeadLine, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            @Html.HiddenFor(model => model.ScholarshipID)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="הכנס" class="btn btn-primary" />
                    @Html.ActionLink("ביטול", "SpList", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
        
    </div>
}
