@model DikanNetProject.Models.CreateUser

@{
    ViewBag.Title = "הוספת משתמש";
    Layout = "~/Views/Dikan/_Layout.cshtml";
}

<h2 class="text-center">@ViewBag.Title</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal container">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h4 class="text-danger">@ViewBag.Error</h4>
    <div class="row">
        <div class="form-group col-md-3 col-sm-4 col-12">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control must only-heb" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3 col-sm-4 col-12">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control must only-heb" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3 col-sm-4 col-12">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control only-numbers must id", maxlength = "9", pattern = "[0-9]{9}" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3 col-sm-4 col-12">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.RadioButtonFor(model => model.Role, "Dikan", new { htmlAttributes = new { @class = "form-control" } }) <span>דיקאן</span>
                @Html.RadioButtonFor(model => model.Role, "Mazkira", new { htmlAttributes = new { @class = "form-control" } }) <span>מזכירה</span>
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6 col-sm-6 col-12">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control must" ,type = "email"} })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6 col-12">
            @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control must" ,type = "email" } })
                @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    

    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-center text-md-right">
            <input type="submit" value="@ViewBag.Title" class="btn btn-outline-primary" onclick="return checkMust()" />
            @Html.ActionLink("ביטול", "UsersList", null, new { @class = "btn btn-outline-primary" })
        </div>
    </div>
</div>
}
