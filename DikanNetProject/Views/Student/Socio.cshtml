@using DataEntities;
@model DataEntities.SocioAdd

@{
    ViewBag.Title = "סוציואקונומית";
    Layout = "~/Views/Student/_Sp_Layout.cshtml";
}

<h2>סוציואקונומי</h2>

@using (Html.BeginForm("Socio", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.HiddenFor(model => model.SocioMod.ScholarshipId, new { @class = "control-label col-md-2" })


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- #region Socio Model -->
    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#Basic">פרטים בסיסיים</button>

    <div id="Basic" class="collapse p-3">
        <div class="row col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.SchoolYear, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownListFor(model => model.SocioMod.SchoolYear,
                    new SelectList(Enum.GetNames(typeof(Common.Enums.SchoolYear))), "שנת לימוד", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SocioMod.SchoolYear, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.Apartment, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SocioMod.Apartment, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'ApartmentFile')" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.Apartment, "", new { @class = "text-danger", })
                    </div>
                </div>
            </div>

            <div id="ApartmentFile" style="display:@(Model.SocioMod.Apartment ? "" : "none")" class="form-group mx-5">
                @Html.LabelFor(model => model.SocioMod.FileApartmentLease, "קובץ", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.TextBoxFor(model => model.SocioMod.FileApartmentLease, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                    @Html.ValidationMessageFor(model => model.SocioMod.FileApartmentLease, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.Newcomer, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SocioMod.Newcomer, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'NewComer')" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.Newcomer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="NewComer" style="display:@(Model.SocioMod.Newcomer ? "" : "none")" class="row mx-5">
                <div class="form-group mx-5">
                    @Html.LabelFor(model => model.SocioMod.DateImmigration, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.SocioMod.DateImmigration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.DateImmigration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SocioMod.FileNewcomer, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.TextBoxFor(model => model.SocioMod.FileNewcomer, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                        @Html.ValidationMessageFor(model => model.SocioMod.FileNewcomer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.SingleParent, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SocioMod.SingleParent, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'SingleParent')" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.SingleParent, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="SingleParent" style="display:@(Model.SocioMod.SingleParent ? "" : "none")" class="mx-5 form-group">
                @Html.LabelFor(model => model.SocioMod.FileSingleParent, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.TextBoxFor(model => model.SocioMod.FileSingleParent, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                    @Html.ValidationMessageFor(model => model.SocioMod.FileSingleParent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.BereavedFam, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SocioMod.BereavedFam, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'BereavedFam')" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.BereavedFam, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="BereavedFam" style="display:@(Model.SocioMod.BereavedFam ? "" : "none")" class="mx-5 form-group">
                @Html.LabelFor(model => model.SocioMod.FileBereavedFam, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.TextBoxFor(model => model.SocioMod.FileBereavedFam, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                    @Html.ValidationMessageFor(model => model.SocioMod.FileBereavedFam, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SocioMod.ReceiveScholarship, htmlAttributes: new { @class = "control-label" })
            <div class="">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SocioMod.ReceiveScholarship)
                    @Html.ValidationMessageFor(model => model.SocioMod.ReceiveScholarship, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.MilitaryService, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.צבאי)
                    <span>@Common.Enums.MilitaryTypes.צבאי</span>

                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.לאומי)
                    <span>@Common.Enums.MilitaryTypes.לאומי</span>

                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.אחר)
                    <span>@Common.Enums.MilitaryTypes.אחר</span>
                    @Html.ValidationMessageFor(model => model.SocioMod.MilitaryService, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.FileMilitaryService, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.TextBoxFor(model => model.SocioMod.FileMilitaryService, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                    @Html.ValidationMessageFor(model => model.SocioMod.FileMilitaryService, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class=" row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.ReserveMilitaryService, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SocioMod.ReserveMilitaryService, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'ReserveMilitary')" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.ReserveMilitaryService, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="ReserveMilitary" style="display:@(Model.SocioMod.ReserveMilitaryService ? "" : "none")" class="mx-5 form-group">
                @Html.LabelFor(model => model.SocioMod.FileReserveMilitaryService, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.TextBoxFor(model => model.SocioMod.FileReserveMilitaryService, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                    @Html.ValidationMessageFor(model => model.SocioMod.FileReserveMilitaryService, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <span>נכות?</span>
                <div>
                    <input type="checkbox" onchange="showHidenPortion(this.checked,'DisabilityType')" />
                </div>
            </div>
            <div id="DisabilityType" style="display:@(Model.SocioMod.DisabilityType.IsEmpty() ? "none" : "")" class="row mx-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.SocioMod.DisabilityType, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.SocioMod.DisabilityType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.DisabilityType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mx-5">
                    @Html.LabelFor(model => model.SocioMod.FileDisabilityType, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.TextBoxFor(model => model.SocioMod.FileDisabilityType, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
                        @Html.ValidationMessageFor(model => model.SocioMod.FileDisabilityType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        @Html.HiddenFor(model => model.MatrialStatus)

    </div>
    <!-- #endregion -->
    <!-- #region Funding -->
    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#FundingWarpper">מימון נוסף</button>

    <div id="FundingWarpper" class="collapse p-3">
        <div class="row form-group">
            @Html.LabelFor(model => model.SocioMod.HasFunding, htmlAttributes: new { @class = "control-label" })
            <div class="">
                <div class="checkbox mx-3">
                    @Html.EditorFor(model => model.SocioMod.HasFunding, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'Funding')" } })
                    @Html.ValidationMessageFor(model => model.SocioMod.HasFunding, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="Funding" style="display:@(Model.SocioMod.HasFunding ? "" : "none")">
            @foreach (var fund in Model.ListFundings)
            {
                @Html.Partial("FundView", fund)
            }
            <button class="funds btn btn-outline-success" id="addFund" type="button" style="font-size:50px;">+</button>
        </div>
    </div>

    <!-- #endregion -->
    <!-- #region Car Student -->
    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#CarWarpper">רכבים</button>

    <div id="CarWarpper" class="collapse p-3">
        <div class="form-group row">
            @Html.LabelFor(model => model.SocioMod.CarOwner, htmlAttributes: new { @class = "control-label" })
            <div class="">
                <div class="checkbox mx-3">
                    @Html.EditorFor(model => model.SocioMod.CarOwner, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'cardiv')" } })
                    @Html.ValidationMessageFor(model => model.SocioMod.CarOwner, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="cardiv" style="display:@(Model.SocioMod.CarOwner ? "" : "none")">
            @foreach (var car in Model.ListCarStudent)
            {
                @Html.Partial("CarsView", car)
            }
            <button class="cars btn btn-outline-success" id="addCar" type="button">+</button>

        </div>
    </div>
    <!-- #endregion -->
    <!-- #region Student Finance -->
    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#StudentFinanceWarpper">הכנסות סטודנט</button>

    <div id="StudentFinanceWarpper" class="collapse p-3">
        <h4>הכנסות</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.SocioMod.WorkSt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.שכיר , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.שכיר</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.עצמאי , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.עצמאי</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.חבר_קיבוץ , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.חבר_קיבוץ</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.לא_עובד , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.לא_עובד</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.פנסיונר , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.פנסיונר</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.נכה , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.נכה</span>

                @Html.RadioButtonFor(model => model.SocioMod.WorkSt, Common.Enums.WorkingStatus.אחר , htmlAttributes: new { @data_target="#Studfindiv",@class="workset" })
                <span>@Common.Enums.WorkingStatus.אחר</span>

                @Html.ValidationMessageFor(model => model.SocioMod.WorkSt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="Studfindiv">
            @foreach (var StudFin in Model.ListStudentFinances)
            {
                @Html.Partial("StudFinView", StudFin)
            }
        </div>
    </div>
    <!-- #endregion -->
    <!-- #region Family Member Finance -->

    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#FamilyFinanceWarpper">הכנסות בן-בת זוג / הורים</button>

    <div id="FamilyFinanceWarpper" class="collapse p-3">
        <h4>הכנסות בן-בת זוג / הורים</h4>
        <!--table of family member with finance-->
        @foreach (var FamFin in Model.ListFamMemFin.ToList())
        {
            @Html.Partial("FamMemView", FamFin)
        }
    </div>

    <!-- #endregion -->
    <!-- #region Family Member -->

    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#FamMemWarpper">בני משפחה</button>

    <div id="FamMemWarpper" class="collapse p-3">
        <h4>בני משפחה</h4>
        <div id="FamMemdiv">
            <!--table of family member-->
            @foreach (var Fam in Model.ListFamMem.ToList())
            {
                @Html.Partial("FamilyView", Fam)
            }
            <button class="btn btn-outline-success fam" id="addFamMem" type="button">+</button>
        </div>
    </div>
    <!-- #endregion -->

    <div class="form-group mt-5">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="הגש מלגה" class="btn btn-success" name="uploadmethod" />
            <input type="submit" value="שמור טיוטה" class="btn btn-warning" name="uploadmethod" />
        </div>
    </div>
</div>
}

@section scripts{

    <script>

        var carviewurl = '@Url.Action("CarsView")'; // cars partial view
        var fundviewurl = '@Url.Action("FundView")'; // fund partial view
        var fammemviewurl = '@Url.Action("FamilyView")'; // family member partial view
        var form = $('form'); // form
        var carsdiv = $('#cardiv .cars'); // cars div inside all pratial rows
        var funddiv = $('#Funding .funds'); // fund div inside all pratial rows
        var fammemdiv = $('#FamMemdiv .fam'); // family member div inside all pratial rows

        $('#addCar').click(function() {
            $.get(carviewurl, function(response) {
            carsdiv.last().before(response);
            // Reparse the validator for client side validation
            //form.data('validator', null);
            //$.validator.unobtrusive.parse(form);
            });
        });

        $(document).on('click','.del-car',function() {
            var container = $(this).closest('.cars');
            var id = container.find('.id').attr('value');
            if (id)
            {
                $.ajax({
                    url: "/Student/DeleteCar",
                    dataType: 'text',
                    data: { CarNum: id },
                    method: "POST",
                    success: function () {
                        container.remove();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                        container.remove();
                    }
                });
            }
            else
            {
                // It never existed, so just remove the container
                container.remove();
            }
        });

    $('#addFund').click(function () {
        $.ajax({
            url: fundviewurl,
            dataType: 'text',
            data: null,
            method: "GET",
            success: function (response) {
                //funddiv.prepend(response);
                funddiv.last().before(response);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.status);
                console.log(thrownError);
                }
            });
            //$.get(fundviewurl, function(response) {
            //funddiv.html(response);
            // Reparse the validator for client side validation
            //form.data('validator', null);
            //$.validator.unobtrusive.parse(form);
           // });
        });

        $(document).on('click','.del-fund',function() {
            var container = $(this).closest('.funds');
            var id = container.find('.id').val();
            if (id && id != 0)
            {
                $.ajax({
                    url: "/Student/DeleteFund",
                    dataType: 'text',
                    data: { FundId: id },
                    method: "POST",
                    success: function () {
                        container.remove();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                        container.remove();
                    }
                });
            }
            else
            {
                // It never existed, so just remove the container
                container.remove();
            }
        });

         $('#addFamMem').click(function() {
            $.get(fammemviewurl, function(response) {
            fammemdiv.last().before(response);
            // Reparse the validator for client side validation
            //form.data('validator', null);
            //$.validator.unobtrusive.parse(form);
            });
        });

        $(document).on('click','.del-fammem',function() {
            var container = $(this).closest('.fam');
            var id = container.find('.id').attr('value');
            if (id)
            {
                $.ajax({
                    url: "/Student/DeleteFamMem",
                    dataType: 'text',
                    data: { FamilyId: id },
                    method: "POST",
                    success: function () {
                        container.remove();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                        container.remove();
                    }
                });
            }
            else
            {
                // It never existed, so just remove the container
                container.remove();
            }
        });

    $('input.workset').change(function () {
        var $container = $($(this).attr('data-target'));
        var $children = $container.children();
        var value = $(this).val();

        switch (value) {
            /*three box*/
            case 'שכיר':
                $children.each(function () {
                    $(this).css("display", "block");
                });
                $container.css("grid-template-columns", "repeat(3,1fr)");
                break;
            /*one box*/
            case 'עצמאי':
            case 'חבר_קיבוץ':
            case 'לא_עובד':
            case 'נכה':
            case 'נפטר':
            case 'אחר':
                $children.each(function () {
                    $(this).css("display", "none");
                });
                $children.first().css("display", "block");
                $container.css("grid-template-columns", "700px");
            break;
            /*tow box*/
            case 'פנסיונר':
                $children.each(function () {
                    $(this).css("display", "block");
                });
                $children.last().css("display", "none");
                $container.css("grid-template-columns", "repeat(2,1fr)");
            break;
            default:console.log("ברירת מחדל");
        }
    });
    </script>
}
