
@{
    Layout = null;
}

    <div id="fund">
        <div class="__add_warpper">
            <input type="text" name="name_fund" value="" placeholder="שם גוף ממן" />
            <input type="number" min="0" name="height_fund" value="" placeholder="סכום מימון" />
            <input type="text" name="year_funding" maxlength="4" class="only-numbers" value="" placeholder="שנת מימון" />
            <input type="hidden" name="funding_id" class="only-numbers" value="0"/>
            <div>
                <button id="AddFund">+</button>
            </div>
        </div>

        <div class="__list_warrper">
            <ul id="fund_list">
                <li class="d-flex flex-row mb-3">
                    <div class="d-flex flex-column ">
                        <span class="font-weight-bold">גוף ממן</span>
                        <span class="">בדיקה</span>
                    </div>
                    <div class="d-flex flex-column mx-5">
                        <span class="font-weight-bold">סכום מימון</span>
                        <span class="">1200</span>
                    </div>
                    <div class="d-flex flex-column">
                        <span class="font-weight-bold">שנה</span>
                        <span class="">2020</span>
                    </div>
                </li>
            </ul>
        </div>

    </div>

















@*<div id="funds">
    @if (Model.Count != 0)
    {
        for (int i = 0; i < Model.Count; i++)
        {
            <div id="f-@i" >
                <div class="form-row">
                    @Html.EditorFor(model => model[i].FinancingInstitution, new { htmlAttributes = new { @class = "control-label must only-heb", @placeholder = "." } })
                    @Html.LabelFor(model => model[i].FinancingInstitution, htmlAttributes: new { @class = "title" })
                </div>
                <div class="form-row">
                    @Html.EditorFor(model => model[i].FinancingHeight, new { htmlAttributes = new { @class = "control-label only-numbers must", @placeholder = ".", @type = "text" } })
                    @Html.LabelFor(model => model[i].FinancingHeight, htmlAttributes: new { @class = "title" })
                </div>
                <div class="text-center">
                    Html.LabelFor(model => model.YearFinancing, htmlAttributes: new { @class = "" })
                    @Html.DropDownListFor(model => model[i].YearFinancing, ViewBag.YearsList as SelectList, "", htmlAttributes: new { @class = "control-label chosen must", @data_placeholder = "שנת מימון" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model[i].FileFunding, htmlAttributes: new { @class = "", @for = "" })
                        <div class="chose-file text-center">
                            @Html.TextBoxFor(model => model[i].FileFunding, new { @class = "control-label", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model[i].PathFunding })
                            <label for="@Html.IdFor(m => m[i].FileFunding)">
                                <i class="ml-1 material-icons">add_photo_alternate</i>
                                בחר קובץ
                            </label>
                            @Html.HiddenFor(model => model[i].PathFunding)
                        </div>
                    </div>

                    <div class="text-center">
                        <a name="@Model[i].PathFunding" style="display:@(Model[i].PathFunding != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                    </div>

                    @Html.HiddenFor(model => model[i].PathFunding)
                    @Html.HiddenFor(model => model[i].FundingId, new { @class = "id" })
                    <button class="btn btn-danger del-fund" type="button">X</button>
                    <div class="form-group row text-danger">
                        @Html.ValidationMessageFor(model => model[i].FinancingInstitution, "", new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model[i].FinancingHeight, "", new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model[i].YearFinancing, "", new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model[i].FileFunding, "", new { @class = "control-label" })
                    </div>
                    </div>
                    }
                    }
                    </div>
                    <div>
                        <button id="newfund" type="button" class="btn btn-primary">+</button>
                    </div>
*@





