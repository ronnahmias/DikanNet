@using HtmlHelpers.BeginCollectionItem;
@using Common;
@model DataEntities.FamilyMember
<!--show family member info-->
    <div class="fammember">
        @using (Html.BeginCollectionItem("ListFamMemFin"))
        {
        <div class="form-group row text-center">
            <!--labels for table of family member-->
            @Html.LabelFor(model => model.FamilyMemberId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Realationship, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.LabelFor(model => model.FileFamId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.PathFmId, htmlAttributes: new { @class = "control-label col-md-1" })
        </div>
        <div class="form-group row text-center">
            @Html.EditorFor(model => model.FamilyMemberId, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.DropDownListFor(model => model.Realationship, new SelectList(Enum.GetValues(typeof(Enums.Realationship)), null, new List<Enums.Realationship> { Enums.Realationship.אח, Enums.Realationship.אחות, Enums.Realationship.בן, Enums.Realationship.בת }), "", new { @class = "control-label col-md-2", @data_placeholder = "מגדר" })
            @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(Enums.Genders))), "", new { @class = "control-label col-md-1", @data_placeholder = "מגדר" })
            @Html.TextBoxFor(model => model.FileFamId, new { @class = "control-label col-md-2", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
            @Html.DisplayFor(model => model.PathFmId, new { @class = "control-label col-md-1" })
        </div>
        <div class="form-group row text-danger">
            @Html.ValidationMessageFor(model => model.FamilyMemberId, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Realationship, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.FileFamId, "", new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.WorkSt, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.שכיר ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.שכיר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Common.Enums.WorkingStatus.עצמאי,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.עצמאי</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.חבר_קיבוץ ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.חבר_קיבוץ</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.לא_עובד ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.לא_עובד</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.פנסיונר ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.פנסיונר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.נכה ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.נכה</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.נפטר ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.נפטר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.אחר ,htmlAttributes: new { @Name = "FemWork" })
            <span>@Common.Enums.WorkingStatus.אחר</span>

            @Html.ValidationMessageFor(model => model.WorkSt, "", new { @class = "text-danger" })
        </div>

            <div id="FamFinDet">
                <!-- table of family member finance-->
                @for (int i = 0; i < Model.FamilyStudentFinances.Count; i++)
                {
                <div class="studfin">
                    <div class="text-center">
                        <h3>הכנסה הוצאה מס' @(Model.FamilyStudentFinances[i].FinNo + 1)</h3>
                    </div>
                    <div class="text-center">
                        @Html.DropDownListFor(model => model.FamilyStudentFinances[i].Year, ViewBag.YearsList as SelectList, "", htmlAttributes: new { @class = "control-label chosen", @data_placeholder = "שנה" })
                        @Html.DropDownListFor(model => model.FamilyStudentFinances[i].Month, ViewBag.MonthsList as SelectList, "", htmlAttributes: new { @class = "control-label chosen", @data_placeholder = "שנה" })
                    </div>
                    @*
        @Html.DisplayFor(model => model.FamilyStudentFinances[i].Year, new { htmlAttributes = new { @class = "control-label col-md-1" } })
        @Html.EditorFor(model => model.FamilyStudentFinances[i].Month, new { htmlAttributes = new { @class = "control-label col-md-1" } })*@

                    <div class="half-row mb-5">
                        <div class="form-row">
                            @Html.EditorFor(model => model.FamilyStudentFinances[i].Salary, new { htmlAttributes = new { @class = "control-label" } })
                            @Html.LabelFor(model => model.FamilyStudentFinances[i].Salary, htmlAttributes: new { @class = "title " })
                        </div>
                        <div class="form-row">
                            @Html.EditorFor(model => model.FamilyStudentFinances[i].Expense, new { htmlAttributes = new { @class = "control-label " } })
                            @Html.LabelFor(model => model.FamilyStudentFinances[i].Expense, htmlAttributes: new { @class = "title" })
                        </div>
                    </div>
                    <div class="half-row">
                        <div class="form-row chose-file-warp">
                            @Html.LabelFor(model => model.FamilyStudentFinances[i].FileSalary, htmlAttributes: new { @class = "", @for = "" })
                            <div class="chose-file text-center">
                                @Html.TextBoxFor(model => model.FamilyStudentFinances[i].FileSalary, new { @class = "control-label", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;" })
                                <label for="@Html.IdFor(m => m.FamilyStudentFinances[i].FileSalary)">
                                    <i class="ml-1 material-icons">add_photo_alternate</i>
                                    בחר קובץ
                                </label>
                                @Html.HiddenFor(model => model.FamilyStudentFinances[i].PathSalary)
                            </div>
                        </div>
                        <div class="text-center">
                            <embed src='/UsersFiles/@Model.StudentId/@Model.FamilyStudentFinances[i].PathSalary' class=" @(@Model.FamilyStudentFinances[i].PathSalary == null ? "d-none" : " ") embed-file" style="" />
                        </div>
                    </div>
                    <div class="half-row">
                        <div class="form-row chose-file-warp">
                            @Html.LabelFor(model => model.FamilyStudentFinances[i].FileExpense, htmlAttributes: new { @class = "", @for = "" })
                            <div class="chose-file text-center">
                                @Html.TextBoxFor(model => model.FamilyStudentFinances[i].FileExpense, new { @class = "control-label", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;" })
                                <label for="@Html.IdFor(m => m.FamilyStudentFinances[i].FileExpense)">
                                    <i class="ml-1 material-icons">add_photo_alternate</i>
                                    בחר קובץ
                                </label>
                                @Html.HiddenFor(model => model.FamilyStudentFinances[i].PathExpense)
                            </div>
                        </div>
                        <div class="text-center chose-file-show">
                            <embed src='/UsersFiles/@Model.StudentId/@Model.FamilyStudentFinances[i].PathExpense' class=" @(@Model.FamilyStudentFinances[i].PathExpense == null ? "d-none" : " ") embed-file" style="" />
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.FamilyStudentFinances[i].FinNo)
                </div>@*
                    <div class="form-group row text-danger">
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].Year, "", new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].Month, "", new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].Salary, "", new { @class = "control-label col-md-1" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].Expense, "", new { @class = "control-label col-md-1" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].FileSalary, "", new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].FileExpense, "", new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].PathSalary, "", new { @class = "control-label col-md-1" })
                        @Html.ValidationMessageFor(model => model.FamilyStudentFinances[i].PathExpense, "", new { @class = "control-label col-md-1" })
                    </div>*@
                }
            </div>
        }
    </div>