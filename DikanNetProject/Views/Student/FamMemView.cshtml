@using listhelper;
@using Common;
@using DikanNetProject.Models;
@model DataEntities.FamilyMember

@{
    var dataToggle = string.Format("FemWork{0}", StaticVar.Idd);
    var dataTarget = string.Format("#FamFinDet{0}", StaticVar.Idd);
}
<!--show family member info-->
    <div class="fammember">
        @using (Html.BeginCollectionItem("ListFamMemFin", ""))
        {
        <div class="form-group row text-center">
            <!--labels for table of family member-->
            @Html.LabelFor(model => model.FamilyMemberId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Realationship, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.LabelFor(model => model.FileFamId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.PathFmId, htmlAttributes: new { @class = "control-label col-md-1" })
        </div>
        <div class="form-group row text-center">
            @Html.EditorFor(model => model.FamilyMemberId, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            @Html.DropDownListFor(model => model.Realationship, new SelectList(Enum.GetValues(typeof(Enums.Realationship)), null, new List<Enums.Realationship> { Enums.Realationship.אח, Enums.Realationship.אחות, Enums.Realationship.בן, Enums.Realationship.בת }), "", new { @class = "control-label col-md-2", @data_placeholder = "מגדר" })
            @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(Enums.Genders))), "", new { @class = "control-label col-md-1", @data_placeholder = "מגדר" })
            @Html.TextBoxFor(model => model.FileFamId, new { @class = "control-label col-md-2", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf" })
            @Html.DisplayFor(model => model.PathFmId, new { @class = "control-label col-md-1" })
        </div>
        <div class="form-group row text-danger">
            @Html.ValidationMessageFor(model => model.FamilyMemberId, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Realationship, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.FileFamId, "", new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.WorkSt, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.שכיר, htmlAttributes: new {@data_toggle=dataToggle ,@data_target=dataTarget,@class="workset"})
            <span>@Common.Enums.WorkingStatus.שכיר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Common.Enums.WorkingStatus.עצמאי, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.עצמאי</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.חבר_קיבוץ, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.חבר_קיבוץ</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.לא_עובד, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.לא_עובד</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.פנסיונר, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.פנסיונר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.נכה, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.נכה</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.נפטר, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget,@class="workset" })
            <span>@Common.Enums.WorkingStatus.נפטר</span>

            @Html.RadioButtonFor(model => model.WorkSt, Enums.WorkingStatus.אחר, htmlAttributes: new { @data_toggle=dataToggle ,@data_target=dataTarget ,@class="workset"})
            <span>@Common.Enums.WorkingStatus.אחר</span>

            @Html.ValidationMessageFor(model => model.WorkSt, "", new { @class = "text-danger" })
        </div>
        <div id=@string.Format("FamFinDet{0}", @StaticVar.Idd) class="FamFinDet">
            @{ if (Model.FamilyStudentFinances != null)
                {
                    foreach (var FamFinn in Model.FamilyStudentFinances.ToList())
                    {
                        @Html.Partial("FamilyFinView", FamFinn)
                    }
                }
             }
            <span style="display:none;">@StaticVar.getIdd</span>
        </div>
                }
    </div>