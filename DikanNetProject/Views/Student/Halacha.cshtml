@using DataEntities;
@model DataEntities.SpHalacha

@{
    ViewBag.Title = "הלכה למעשה";
    Layout = "~/Views/Student/_Sp_Layout.cshtml";
}

<h2 class="text-center">מלגת הלכה למעשה</h2>
<div id="halaca-container" class="container">
    @using (Html.BeginForm("Halacha", "Student", FormMethod.Post, new { @class = "SpForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.HiddenFor(model => model.ScholarshipId, new { @class = "control-label col-md-2" })
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group col-md-5 col-sm-5 col-12 ">
                @Html.LabelFor(model => model.SchoolYear, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownListFor(model => model.SchoolYear,
                   new SelectList(Enum.GetNames(typeof(Common.Enums.SchoolYear))), "", new { @class = "form-control chosen must", @data_placeholder = "שנת לימוד" })
                    @Html.ValidationMessageFor(model => model.SchoolYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-12">
                @Html.LabelFor(model => model.VolunteerExp, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.VolunteerExp, new { htmlAttributes = new { @class = "form-control must" } })
                    @Html.ValidationMessageFor(model => model.VolunteerExp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-12">
                @Html.LabelFor(model => model.VoluntaryAvailability, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.VoluntaryAvailability, new { htmlAttributes = new { @class = "form-control must" } })
                    @Html.ValidationMessageFor(model => model.VoluntaryAvailability, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-12">
                @Html.LabelFor(model => model.AboutMe, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.AboutMe, new { htmlAttributes = new { @class = "form-control must" } })
                    @Html.ValidationMessageFor(model => model.AboutMe, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row col-12">
                <div class="form-group col-md-6 col-sm-6 col-12">
                    @Html.LabelFor(model => model.Volunteer1Id, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.DropDownListFor(model => model.Volunteer1Id, ViewBag.VolunteerPlacesList as SelectList, "", htmlAttributes: new { @class = "form-control chosen must", @data_placeholder = "אופציה ראשונה למקום התנדבות" })
                        @Html.ValidationMessageFor(model => model.Volunteer1Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6 col-sm-6 col-12">
                    @Html.LabelFor(model => model.Volunteer2Id, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.DropDownListFor(model => model.Volunteer2Id, (IEnumerable<SelectListItem>)ViewBag.VolunteerPlacesList, "", htmlAttributes: new { @class = "form-control chosen ", @data_placeholder = "אופציה שנייה למקום התנדבות" })
                        @Html.ValidationMessageFor(model => model.Volunteer2Id, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <p>חתימה</p>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="הגש מלגה" class="btn btn-outline-primary" name="uploadmethod" onclick="return beforeSumbit('halacha')" />
                    <input type="submit" value="שמור טיוטה" class="btn btn-outline-primary" name="uploadmethod" />
                </div>
            </div>
        </div>
    }
</div>

