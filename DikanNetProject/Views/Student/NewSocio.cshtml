@using DataEntities;
@model DataEntities.SocioAdd

@{
    ViewBag.Title = "סוציואקונומית";
    Layout = "~/Views/Student/_Sp_Layout.cshtml";
}
<h2>מלגת סוציואקונומית חדש</h2>

@using (Ajax.BeginForm("SocioDetails", "Student",  new AjaxOptions { HttpMethod = "POST", OnSuccess = "firstsuccess();" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.SocioMod.ScholarshipId, new { @class = "control-label col-md-2" })

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>

    <!-- #region Socio Model -->
    <button type="button" class="btn btn-primary col-12 my-2" data-toggle="collapse" data-target="#Basic">פרטים בסיסיים</button>

    <div id="Basic" class="collapse p-3">
        <div class="row col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.SchoolYear, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownListFor(model => model.SocioMod.SchoolYear,
                    new SelectList(Enum.GetNames(typeof(Common.Enums.SchoolYear))), "", new { @class = "form-control chosen must", @data_placeholder = "שנת לימוד" })
                    @Html.ValidationMessageFor(model => model.SocioMod.SchoolYear, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.Apartment, htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(model => model.SocioMod.Apartment, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'ApartmentFile')" })  כן
                @Html.RadioButtonFor(model => model.SocioMod.Apartment, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'ApartmentFile')" })  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.Apartment, "", new { @class = "text-danger", })
                    </div>
                </div>
            </div>

            <div id="ApartmentFile" style="display:@(Model.SocioMod.Apartment ? "" : "none")" class="form-group mx-5 box-open">
                @Html.LabelFor(model => model.SocioMod.FileApartmentLease, htmlAttributes: new { @class = "control-label", @for = "" })
                <div class="row">
                    <div class="chose-file m-3 mt-0">
                        @Html.TextBoxFor(model => model.SocioMod.FileApartmentLease, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathApartmentLease })
                        <label for="SocioMod_FileApartmentLease" value="@Model.SocioMod.PathApartmentLease">
                            <i class="ml-1 material-icons">add_photo_alternate</i>
                            בחר קובץ
                        </label>
                    </div>
                    <a name="@Model.SocioMod.PathApartmentLease" style="display:@(Model.SocioMod.PathApartmentLease != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                </div>
                @Html.ValidationMessageFor(model => model.SocioMod.FileApartmentLease, "", new { @class = "text-danger", })
            </div>

            @Html.HiddenFor(model => model.SocioMod.PathApartmentLease)

        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.Newcomer, htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(model => model.SocioMod.Newcomer, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'NewComer')" })  כן
                @Html.RadioButtonFor(model => model.SocioMod.Newcomer, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'NewComer')" })  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.Newcomer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="NewComer" style="display:@(Model.SocioMod.Newcomer ? "" : "none")" class="row mx-5 box-open">
                <div class="form-group mx-5">
                    @Html.LabelFor(model => model.SocioMod.DateImmigration, htmlAttributes: new { @class = "control-label " })
                    <div class="input-group">
                        @Html.EditorFor(model => model.SocioMod.DateImmigration, new { htmlAttributes = new { @class = "form-control only-numbers", @max = DateTime.Now.ToString("yyyy-MM-dd"), @min = "1930-01-01" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.DateImmigration, "", new { @class = "text-danger" })
                        <div class="input-group-append clear-date d-none">
                            <span class="input-group-text left-border-radius pointer">נקה</span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SocioMod.FileNewcomer, htmlAttributes: new { @class = "control-label ", @for = "" })
                    <div class="row">
                        <div class="chose-file m-3 mt-0">
                            @Html.TextBoxFor(model => model.SocioMod.FileNewcomer, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathNewcomer })
                            <label for="SocioMod_FileNewcomer">
                                <i class="ml-1 material-icons">add_photo_alternate</i>
                                בחר קובץ
                            </label>
                        </div>
                        <a name="@Model.SocioMod.PathNewcomer" style="display:@(Model.SocioMod.PathNewcomer != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                    </div>
                    @Html.ValidationMessageFor(model => model.SocioMod.FileNewcomer, "", new { @class = "text-danger", })
                    @Html.HiddenFor(model => model.SocioMod.PathNewcomer)
                </div>
            </div>

        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.SingleParent, htmlAttributes: new { @class = "control-label " })
                @Html.RadioButtonFor(model => model.SocioMod.SingleParent, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'SingleParent')" })  כן
                @Html.RadioButtonFor(model => model.SocioMod.SingleParent, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'SingleParent')" })  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.SingleParent, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="SingleParent" style="display:@(Model.SocioMod.SingleParent ? "" : "none")" class="mx-5 form-group box-open">
                @Html.LabelFor(model => model.SocioMod.FileSingleParent, htmlAttributes: new { @class = "control-label ", @for = "" })

                <div class="row">
                    <div class="chose-file m-3 mt-0">
                        @Html.TextBoxFor(model => model.SocioMod.FileSingleParent, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathSingleParent })
                        <label for="SocioMod_FileSingleParent">
                            <i class="ml-1 material-icons">add_photo_alternate</i>
                            בחר קובץ
                        </label>
                    </div>
                    <a name="@Model.SocioMod.PathSingleParent" style="display:@(Model.SocioMod.PathSingleParent != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                </div>
                @Html.ValidationMessageFor(model => model.SocioMod.FileSingleParent, "", new { @class = "text-danger", })
                @Html.HiddenFor(model => model.SocioMod.PathSingleParent)
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.BereavedFam, htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(model => model.SocioMod.BereavedFam, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'BereavedFam')" })  כן
                @Html.RadioButtonFor(model => model.SocioMod.BereavedFam, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'BereavedFam')" })  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.BereavedFam, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="BereavedFam" style="display:@(Model.SocioMod.BereavedFam ? "" : "none")" class="mx-5 form-group box-open">
                @Html.LabelFor(model => model.SocioMod.FileBereavedFam, htmlAttributes: new { @class = "control-label", @for = "" })
                <div class="row">
                    <div class="chose-file m-3 mt-0">
                        @Html.TextBoxFor(model => model.SocioMod.FileBereavedFam, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathBereavedFam })
                        <label for="SocioMod_FileBereavedFam">
                            <i class="ml-1 material-icons">add_photo_alternate</i>
                            בחר קובץ
                        </label>
                    </div>
                    <a name="@Model.SocioMod.PathBereavedFam" style="display:@(Model.SocioMod.PathBereavedFam != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                </div>
                @Html.ValidationMessageFor(model => model.SocioMod.FileBereavedFam, "", new { @class = "text-danger", })
                @Html.HiddenFor(model => model.SocioMod.PathBereavedFam)
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.ReceiveScholarship, htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(model => model.SocioMod.ReceiveScholarship, true)  כן
                @Html.RadioButtonFor(model => model.SocioMod.ReceiveScholarship, false)  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.ReceiveScholarship, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @{var miltaryServ = @Model.SocioMod.MilitaryService; }
                @Html.LabelFor(model => model.SocioMod.MilitaryService, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.אחר, new { Checked = (miltaryServ != null && miltaryServ.Contains("אחר")) ? "checked" : "" })
                    <input type="text" class="only-heb" value='@((miltaryServ != null && miltaryServ.Contains("אחר")) ? @Model.SocioMod.MilitaryService : "אחר - " )' id="otherMili" placeholder="אחר - ">

                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.צבאי)
                    <span>@Common.Enums.MilitaryTypes.צבאי</span>

                    @Html.RadioButtonFor(model => model.SocioMod.MilitaryService, Common.Enums.MilitaryTypes.לאומי)
                    <span>@Common.Enums.MilitaryTypes.לאומי</span>

                    @Html.ValidationMessageFor(model => model.SocioMod.MilitaryService, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mx-5">
                @Html.LabelFor(model => model.SocioMod.FileMilitaryService, htmlAttributes: new { @class = "control-label", @for = "" })

                <div class="row">
                    <div class="chose-file m-3 mt-0">
                        @Html.TextBoxFor(model => model.SocioMod.FileMilitaryService, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathMilitaryService })
                        <label for="SocioMod_FileMilitaryService">
                            <i class="ml-1 material-icons">add_photo_alternate</i>
                            בחר קובץ
                        </label>
                    </div>
                    <a name="@Model.SocioMod.PathMilitaryService" style="display:@(Model.SocioMod.PathMilitaryService != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                </div>
                @Html.ValidationMessageFor(model => model.SocioMod.FileMilitaryService, "", new { @class = "text-danger", })
                @Html.HiddenFor(model => model.SocioMod.PathMilitaryService)
            </div>

        </div>

        <div class=" row">
            <div class="form-group">
                @Html.LabelFor(model => model.SocioMod.ReserveMilitaryService, htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(model => model.SocioMod.ReserveMilitaryService, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'ReserveMilitary')" })  כן
                @Html.RadioButtonFor(model => model.SocioMod.ReserveMilitaryService, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'ReserveMilitary')" })  לא
                <div class="">
                    <div class="checkbox">
                        @Html.ValidationMessageFor(model => model.SocioMod.ReserveMilitaryService, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="ReserveMilitary" style="display:@(Model.SocioMod.ReserveMilitaryService ? "" : "none")" class="mx-5 form-group box-open">
                @Html.LabelFor(model => model.SocioMod.FileReserveMilitaryService, htmlAttributes: new { @class = "control-label", @for = "" })

                <div class="row">
                    <div class="chose-file m-3 mt-0">
                        @Html.TextBoxFor(model => model.SocioMod.FileReserveMilitaryService, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathReserveMilitaryService })
                        <label for="SocioMod_FileReserveMilitaryService">
                            <i class="ml-1 material-icons">add_photo_alternate</i>
                            בחר קובץ
                        </label>
                    </div>
                    <a name="@Model.SocioMod.PathReserveMilitaryService" style="display:@(Model.SocioMod.PathReserveMilitaryService != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                </div>
                @Html.ValidationMessageFor(model => model.SocioMod.FileReserveMilitaryService, "", new { @class = "text-danger", })
                @Html.HiddenFor(model => model.SocioMod.PathReserveMilitaryService)

            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <span>נכות?</span>
                <input type="radio" name="DisabilityType" onclick="showHidenPortion('true' ,'DisabilityType')" checked="@(!Model.SocioMod.DisabilityType.IsEmpty())" /> כן
                <input type="radio" name="DisabilityType" onclick="showHidenPortion('false' ,'DisabilityType')" checked="@(Model.SocioMod.DisabilityType.IsEmpty())" /> לא
            </div>
            <div id="DisabilityType" style="display:@(Model.SocioMod.DisabilityType.IsEmpty() ? "none" : "")" class="row mx-5 box-open">
                <div class="form-group">
                    @Html.LabelFor(model => model.SocioMod.DisabilityType, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.SocioMod.DisabilityType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SocioMod.DisabilityType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mx-5">
                    @Html.LabelFor(model => model.SocioMod.FileDisabilityType, htmlAttributes: new { @class = "control-label", @for = "" })
                    <div class="row">
                        <div class="chose-file m-3 mt-0">
                            @Html.TextBoxFor(model => model.SocioMod.FileDisabilityType, new { @class = "form-control", @type = "file", @accept = "image/jpeg,image/jpg,image/png,application/pdf", @style = "display:none;", @path = Model.SocioMod.PathDisabilityType })
                            <label for="SocioMod_FileDisabilityType">
                                <i class="ml-1 material-icons">add_photo_alternate</i>
                                בחר קובץ
                            </label>
                        </div>
                        <a name="@Model.SocioMod.PathDisabilityType" style="display:@(Model.SocioMod.PathDisabilityType != null ? "" : "none")" class="btn btn-light btn-file">צפייה בקובץ שמור</a>
                    </div>
                    @Html.ValidationMessageFor(model => model.SocioMod.FileDisabilityType, "", new { @class = "text-danger", })
                    @Html.HiddenFor(model => model.SocioMod.PathDisabilityType)
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.MatrialStatus)
    </div>
    <button class="btn btn-primary" type="submit">שלח</button>
    <!-- #endregion -->
}

<form id="msform">
    <!-- progressbar -->
    <ul id="progressbar">
        <li class="active">Account Setup</li>
        <li>Social Profiles</li>
        <li>Personal Details</li>
    </ul>
    <!-- fieldsets -->
    <fieldset>
        <h2 class="fs-title">Create your account</h2>
        <h3 class="fs-subtitle">This is step 1</h3>
        <input type="text" name="email" placeholder="Email" />
        <input type="password" name="pass" placeholder="Password" />
        <input type="password" name="cpass" placeholder="Confirm Password" />
        <input type="button" name="next" class="next action-button" value="Next" />
    </fieldset>
    <fieldset>
        <h2 class="fs-title">Social Profiles</h2>
        <h3 class="fs-subtitle">Your presence on the social network</h3>
        <input type="text" name="twitter" placeholder="Twitter" />
        <input type="text" name="facebook" placeholder="Facebook" />
        <input type="text" name="gplus" placeholder="Google Plus" />
        <input type="button" name="previous" class="previous action-button" value="Previous" />
        <input type="button" name="next" class="next action-button" value="Next" />
    </fieldset>
    <fieldset>
        <h2 class="fs-title">Personal Details</h2>
        <h3 class="fs-subtitle">We will never sell it</h3>
        <input type="text" name="fname" placeholder="First Name" />
        <input type="text" name="lname" placeholder="Last Name" />
        <input type="text" name="phone" placeholder="Phone" />
        <textarea name="address" placeholder="Address"></textarea>
        <input type="button" name="previous" class="previous action-button" value="Previous" />
        <input type="submit" name="submit" class="submit action-button" value="Submit" />
    </fieldset>
</form>


@section scripts{
    <script>

        function firstsuccess() { alert('this is ajaxSuccess'); }
    </script>
}
