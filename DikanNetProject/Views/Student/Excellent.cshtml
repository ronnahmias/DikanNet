@using DataEntities;
@model DataEntities.SpExcellence

@{
    ViewBag.Title = "מצוינות";
    Layout = "~/Views/Student/_Sp_Layout.cshtml";
}

<h2 class="text-center">מלגת מצוינות</h2>

<div class="container">
    @using (Html.BeginForm("Excellent","Student",FormMethod.Post,new { @class = "SpForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.HiddenFor(model => model.ScholarshipId, new { @class = "control-label col-md-2" })
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SchoolYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SchoolYear,
                  new SelectList(Enum.GetNames(typeof(Common.Enums.SchoolYear))), "", new { @class = "form-control chosen must", @data_placeholder = "שנת לימוד" ,@data_allows_new_values = "true"})
                    @Html.ValidationMessageFor(model => model.SchoolYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row col-12">
                <div class="form-group col-md-3 col-sm-4 col-12">
                    @Html.LabelFor(model => model.Iswork, htmlAttributes: new { @class = "control-label" })
                    @Html.RadioButtonFor(model => model.Iswork, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'workExcellent')" })  כן
                    @Html.RadioButtonFor(model => model.Iswork, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'workExcellent')" })  לא
                    <div class="">
                        <div class="checkbox">
                           @* @Html.EditorFor(model => model.Iswork, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'workExcellent')" } })*@
                            @Html.ValidationMessageFor(model => model.Iswork, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="workExcellent" style="display:@(@Model.Iswork ? "" : "none")" class="row col-md-9 col-sm-8 col-12">
                    <div class="form-group col-md-6 col-sm-6 col-12">
                        @Html.LabelFor(model => model.WorkJob, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.WorkJob, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WorkJob, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6 col-sm-6 col-12">
                        @Html.LabelFor(model => model.WorkPlace, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WorkPlace, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row col-12">
                <div class="form-group col-md-3 col-sm-4 col-12">
                    @Html.LabelFor(model => model.WantSp, htmlAttributes: new { @class = "control-label " })
                    @Html.RadioButtonFor(model => model.WantSp, true, new { mode = "true", @onclick = "showHidenPortion(this.getAttribute('mode'),'MentorSub')" })  כן
                    @Html.RadioButtonFor(model => model.WantSp, false, new { @mode = "false", @onclick = "showHidenPortion(this.getAttribute('mode'),'MentorSub')" })  לא
                    <div class="">
                        <div class="checkbox">
                           @* @Html.EditorFor(model => model.WantSp, new { htmlAttributes = new { onchange = "showHidenPortion(this.checked,'MentorSub')" } })*@
                            @Html.ValidationMessageFor(model => model.WantSp, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="MentorSub" style="display:@(@Model.WantSp ? "" : "none")" class="row col-md-9 col-sm-8 col-12">
                    <div class="form-group col-12">
                        @Html.LabelFor(model => model.MentorSub, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.MentorSub, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MentorSub, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group  col-12">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control must" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-12">
                @Html.LabelFor(model => model.AboutMe, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.AboutMe, new { htmlAttributes = new { @class = "form-control must" } })
                    @Html.ValidationMessageFor(model => model.AboutMe, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="הגש מלגה" class="btn btn-outline-primary"  onclick="return beforeSumbit('excellent')" />
                    <input type="submit" value="שמור טיוטה" class="btn btn-outline-primary" name="uploadmethod" />
                </div>
            </div>
        </div>
    }
</div>

<script>

</script>

